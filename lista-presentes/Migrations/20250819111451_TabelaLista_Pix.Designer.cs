// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using lista_presentes;

#nullable disable

namespace lista_presentes.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250819111451_TabelaLista_Pix")]
    partial class TabelaLista_Pix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("lista_presentes.Entities.Lista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChavePix")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("chave_pix");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_edicao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<int?>("TipoChavePixId")
                        .HasColumnType("integer")
                        .HasColumnName("id_tipo_chave_pix");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.Property<double>("ValorPix")
                        .HasColumnType("double precision")
                        .HasColumnName("valor_pix");

                    b.HasKey("Id");

                    b.HasIndex("TipoChavePixId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("lista");
                });

            modelBuilder.Entity("lista_presentes.Entities.ListaUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_edicao");

                    b.Property<int>("ListaId")
                        .HasColumnType("integer")
                        .HasColumnName("id_lista");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.HasKey("Id");

                    b.HasIndex("ListaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("lista_usuario");
                });

            modelBuilder.Entity("lista_presentes.Entities.TipoChavePix", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_edicao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.HasKey("Id");

                    b.ToTable("tipo_chave_pix");
                });

            modelBuilder.Entity("lista_presentes.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_edicao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("lista_presentes.Entities.Lista", b =>
                {
                    b.HasOne("lista_presentes.Entities.TipoChavePix", "TipoChavePix")
                        .WithMany()
                        .HasForeignKey("TipoChavePixId");

                    b.HasOne("lista_presentes.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoChavePix");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("lista_presentes.Entities.ListaUsuario", b =>
                {
                    b.HasOne("lista_presentes.Entities.Lista", "Lista")
                        .WithMany()
                        .HasForeignKey("ListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lista_presentes.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lista");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
